AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Timeout: 60

Parameters:
  Stage:
    Type: String
    Default: dev
  BucketName:
    Type: String
    Default: aiyi.demo.textexact

Resources:
  TextExtractSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Sub "textexact-sns-topic"
      TopicName: !Sub "textexact-sns-topic"
      Subscription:
        - Protocol: lambda
          Endpoint: !GetAtt TextExtractSNSTopic.Arn

  TextExtractEndFunction:
    Type: AWS::Serverless::Function
    Environment:
      Variables:
        SNS_TOPIC: !GetAtt TextExtractSNSTopic.Arn
    Properties:
      CodeUri: python/
      Handler: handler.textExactEnd
      Runtime: nodejs8.10

  TextExtractRole:
    Type: AWS::IAM::Role
    Policies:
      - !GetAtt TextExtractSNSTopicPolicy.Arn

  TextExtractSNSTopicPolicy::
    Type: "AWS::SNS::TopicPolicy"
    Properties:
      Topics:
        - !Ref TextExtractSNSTopic
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: "sns:Publish"
            Resource: !Ref TextExtractSNSTopic
            Principal:
              AWS: "*"
            Condition:
              ArnLike:
                AWS:SourceArn: !Sub "arn:aws:*:*:${AWS::AccountId}:*"

  extExactStartFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: nodejs/
      Handler: handler.lambdaHandler
      Runtime: nodejs12.x
      FunctionName: !Join ["", [!Ref Stage, "-api-HelloWorldFunction"]]
      Events:
        HelloWorld:
          Type: HttpApi
          Properties:
            ApiId: !Ref MyHttpApi
            Path: /hello
            Method: get
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - "s3:GetObject"
              Resource: !GetAtt S3Bucket.Arn
            - Effect: Allow
              Action:
                - "textexact:*"
              Resource: "*"

  EventFailureHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handler.lambdaHandler
      CodeUri: python/
      Runtime: python3.7
      FunctionName: !Join ["", [!Ref Stage, "-api-event-failure"]]

  EventInvokeConfig:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName: !Ref TextExactStartFunction
      Qualifier: "$LATEST"
      MaximumEventAgeInSeconds: 60
      MaximumRetryAttempts: 0
      DestinationConfig:
        OnSuccess:
          Destination: !GetAtt Fromhelloworld.Arn

  MyHttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: !Ref Stage
      Cors:
        AllowMethods: "'OPTIONS,POST,GET'"
        AllowHeaders: "'Content-Type'"
        AllowOrigin: "'*'"
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName

Outputs:
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${MyHttpApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/hello/"
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn
