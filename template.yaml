AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Timeout: 60

Parameters:
  Stage:
    Type: String
    Default: dev
  BucketName:
    Type: String
    Default: aiyi.demo.textexact

Resources:
  TextExtractSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Sub "textexact-sns-topic"
      TopicName: !Sub "textexact-sns-topic"
      Subscription:
        - Protocol: lambda
          Endpoint: !GetAtt TextExtractEndFunction.Arn

  TextExtractEndFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: python/
      Handler: handler.textExactEnd
      Runtime: nodejs8.10
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - "s3:GetObject"
              Resource: !GetAtt S3Bucket.Arn

  EventFailureHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handler.delete_activity
      CodeUri: python/
      Runtime: python3.7
      FunctionName: !Join ["", [!Ref Stage, "-api-event-failure"]]

  TextExactStartFunction:
    Type: AWS::Serverless::Function
    Properties:
      Environment:
        Variables:
          TEXT_EXTRACT_ROLE: !GetAtt TextExtractRole.Arn
          SNS_TOPIC: !Ref TextExtractSNSTopic
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action: "sns:Publish"
              Resource: "*"
            - Effect: Allow
              Action:
                - "s3:GetObject"
              Resource: !GetAtt S3Bucket.Arn
            - Effect: Allow
              Action:
                - "lambda:invokeFunction"
              Resource:
                - !GetAtt EventFailureHandlerFunction.Arn
                - arn:aws:lambda:ap-southeast-2:820412658253:function:test
      CodeUri: nodejs/
      Handler: handler.textexactHandler
      Runtime: nodejs12.x
      FunctionName: !Join ["", [!Ref Stage, "TextExactStartFunction"]]
      Events:
        PDFUploadEvent:
          Type: S3
          Properties:
            Bucket: !Ref S3Bucket
            Events: s3:ObjectCreated:*
      # Events:
      #   TextExactStart:
      #     Type: HttpApi
      #     Properties:
      #       Path: /textexact
      #       Method: get

  EventInvokeConfig:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName: !Ref TextExactStartFunction
      Qualifier: "$LATEST"
      MaximumEventAgeInSeconds: 60
      MaximumRetryAttempts: 0
      DestinationConfig:
        OnSuccess:
          Destination: !GetAtt EventFailureHandlerFunction.Arn
        OnFailure:
          Destination: !GetAtt EventFailureHandlerFunction.Arn

  TextExtractRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "TextExtractRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "textract.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: "TextExtractRoleAccess"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "sns:Publish"
                Resource: "*"

  MyHttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: !Ref Stage
      Cors:
        AllowMethods: "'OPTIONS,POST,GET'"
        AllowHeaders: "'Content-Type'"
        AllowOrigin: "'*'"
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
